{{ if .Values.storage.createNamespace }}
---
apiVersion: v1
kind: Namespace
metadata:
  name: hostpath-provisioner
---
{{ end }}
{{ if .Values.storage.addStorageClass }}
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: hostpath-provisioner
  namespace: hostpath-provisioner
provisioner: kubevirt.io/hostpath-provisioner
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
---
{{ end }}
{{ if .Values.storage.provisioner.enabled }}
apiVersion: hostpathprovisioner.kubevirt.io/v1beta1
kind: HostPathProvisioner
metadata:
  name: hostpath-provisioner
  namespace: hostpath-provisioner
spec:
  imagePullPolicy: IfNotPresent
  pathConfig:
    path: "/var/hpvolumes"
    useNamingPrefix: false
  workload:
    nodeSelector:
      kubernetes.io/os: linux
---
{{ end }}
{{ if .Values.storage.deployOperator }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hostpath-provisioner-operator
  namespace: hostpath-provisioner
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hostpath-provisioner-operator
  namespace: hostpath-provisioner
spec:
  replicas: 1
  selector:
    matchLabels:
      name: hostpath-provisioner-operator
  template:
    metadata:
      labels:
        name: hostpath-provisioner-operator
    spec:
      serviceAccountName: hostpath-provisioner-operator
      containers:
        - name: hostpath-provisioner-operator
          image: {{ .Values.storage.operator.image }}:{{ .Values.storage.operator.tag }}
          command:
          - hostpath-provisioner-operator
          imagePullPolicy: Always
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "hostpath-provisioner-operator"
            - name: PROVISIONER_IMAGE
              value: "{{ .Values.storage.image }}:{{ .Values.storage.tag }}"
---
{{ end }}
{{ if .Values.storage.rbac.enabled }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hostpath-provisioner-operator
  namespace: hostpath-provisioner
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - create
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
  - watch
  - create
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  resourceNames:
  - hostpath-provisioner
  verbs:
  - update
  - delete
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - list
  - get
  - watch
  - create # Need watch and create here or it cannot create the specific hostpath-provisioner cluster roles, cannot put watch and create on the specific resourceName
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - list
  - get
  - watch
  - create
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  resourceNames:
  - hostpath-provisioner
  verbs:
  - update
  - delete
- apiGroups:
  - apps
  resourceNames:
  - hostpath-provisioner-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - hostpathprovisioner.kubevirt.io
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - list
  - get
  - watch
  - create
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  resourceNames:
  - hostpath-provisioner
  verbs:
  - delete
  - update
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  resourceNames:
  - hostpath-provisioner
  verbs:
  - delete
  - update
- apiGroups:
  - ""
  resources:
    - nodes
  verbs:
    - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hostpath-provisioner-operator
  namespace: hostpath-provisioner
rules:
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - list
  - get
  - watch
  - create
- apiGroups:
  - apps
  resources:
  - daemonsets
  resourceNames:
  - hostpath-provisioner
  verbs:
  - delete
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - get
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  resourceNames:
  - hostpath-provisioner-admin
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - list
  - get
  - watch
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hostpath-provisioner-operator
  namespace: hostpath-provisioner
subjects:
- kind: ServiceAccount
  name: hostpath-provisioner-operator
  namespace: hostpath-provisioner
roleRef:
  kind: ClusterRole
  name: hostpath-provisioner-operator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hostpath-provisioner-operator
  namespace: hostpath-provisioner
subjects:
- kind: ServiceAccount
  name: hostpath-provisioner-operator
  namespace: hostpath-provisioner
roleRef:
  kind: Role
  name: hostpath-provisioner-operator
  apiGroup: rbac.authorization.k8s.io
{{ end }}