---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: customers-service
  name: customers-service
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    app: customers-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: customers-service
  name: customers-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: customers-service
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "8080"
      labels:
        app: customers-service
    spec:
      containers:
      - image: {{ .Values.customersService.image }}:{{ .Values.customersService.tag }}
        name: customers-service
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            port: 8080
            path: /actuator/health/liveness
          initialDelaySeconds: 90
          periodSeconds: 5
        readinessProbe:
          httpGet:
            port: 8080
            path: /actuator/health/readiness
          initialDelaySeconds: 15
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 10"]
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 2000m
            memory: 1Gi
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: kubernetes
        - name: SPRING_DATASOURCE_URL
          value: jdbc:mysql://{{ .Values.customersService.dbInstanceName }}.{{ ..Release.Namespace }}.svc.cluster.local:3306/{{ .Values.customersService.dbName }}?queryInterceptors=brave.mysql8.TracingQueryInterceptor&exceptionInterceptors=brave.mysql8.TracingExceptionInterceptor&zipkinServiceName={{ .Values.customersService.zipkinServiceName }}
        - name: SPRING_DATASOURCE_USERNAME
          value: root
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
             secretKeyRef:
               name: {{ .Values.customersService.dbInstanceName }}
               key: mysql-root-password
        ports:
        - containerPort: 8080
        resources: {}
      restartPolicy: Always
status: {}
